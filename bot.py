import telebot
import random
import playerMode

from telebot import types
from dotenv import load_dotenv

import config

path = "F:/DnD-bro-token/token.env"
load_dotenv(dotenv_path=path)

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É start

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    –ò —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    """

    bot.send_video(message.chat.id, 'https://tenor.com/ru/view/pepe-pepe-the-frog-wizard-gif-7939266', None, '')
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("‚ôÇ Dungeon Master ‚ôÇ")
    item2 = types.KeyboardButton("‚öî –ò–≥—Ä–æ–∫ ‚öî")

    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     "–ë—É–¥—å –∫–∞–∫ –¥–æ–º–∞, {0.first_name}!\n–Ø –Ω–∏ –≤ —á–µ–º –Ω–µ –æ—Ç–∫–∞–∂—É...\n\n"
                     "–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —Å–¥–µ–ª–∞–ª–∏ –º–µ–Ω—è —Å –æ–¥–Ω–æ–π —Ü–µ–ª—å—é - –æ–±–ª–µ–≥—á–∏—Ç—å —Ç–≤–æ—é —Ñ–µ–Ω—Ç–µ–∑–∏–π–Ω—É—é –∂–∏–∑–Ω—å\n(–Ω–∞–¥–µ—é—Å—å, –º–æ–∂–Ω–æ –≤–µ–¥—å —Å—Ä–∞–∑—É –Ω–∞ —Ç—ã?)\n\n"
                     "–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å:\n\n"
                     "üé≤ <b>–†–æ–ª–ª–∏—Ç—å –¥–∞–π—Å—ã</b> (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ —ç–ª—å—Ñ–∏–π—Å–∫–æ–º, —á—Ç–æ —è –∑–Ω–∞—é);\n\n"
                     "üìù <b>–í–≤–µ—Å—Ç–∏ —É—á–µ—Ç —Å–≤–æ–∏—Ö –¥—Ä—É–≥–∏—Ö, –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∂–∏–∑–Ω–µ–π</b>;\n\n"
                     "üßë <b>–°–ø–∏—Ö–Ω—É—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ª—é–¥–µ–π –∏ –∏–º–µ–Ω–∞ –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –±–µ–∑–¥—É—à–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç</b> (—ç—Ç —è, –¥–∞ :3);\n\n"
                     "üëâüëà <b>–ü–æ–ª—É—á–∏—Ç—å –¥–æ–∑—É —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –º–µ–∂–¥—É –ø–∞—Ä—Ç–∏—è–º–∏</b>;\n\n"
                     "–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! - —Å–∫–∞–∑–∞–ª –±—ã —è, –±—ã–ª–æ –±—ã —á—Ç–æ-—Ç–æ –µ—â–µ...\n"
                     "–í –æ–±—â–µ–º, –ø–æ–º–æ–≥—É, —á–µ–º —Å–º–æ–≥—É.\n\n"
                     "<b>–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å:\n"
                     "—Ç—ã ‚ôÇ Dungeon Master ‚ôÇ –∏–ª–∏ ‚öî –ò–≥—Ä–æ–∫ ‚öî?</b>".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def role_choice_handler(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    –í–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –Ω–∏—Ö:
    '‚ôÇ Dungeon Master ‚ôÇ': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –î–ú-–∞;
    '‚öî –ò–≥—Ä–æ–∫ ‚öî': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞;
    '–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Ä–µ–∂–∏–º;
    '–î–∞–π—Å—ã –∫–∏–Ω—å!': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –∏–º–∏—Ç–∏—Ä—É—è –±—Ä–æ—Å–æ–∫ –¥–∞–π—Å–∞;
    '–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π': —Ä–∞–±–æ—Ç–∞ —Å –ª–∏—Å—Ç–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–†–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞ [*–•–æ—Ç—è –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –≤–ø–∏—Ö–Ω—É—Ç—å –∏ –≤ —Ä–µ–∂–∏–º –î–ú-–∞, –Ω–µ —Ç–∞–∫ –≤–µ–¥—å —Å–ª–æ–∂–Ω–æ...*])
    '–î–æ–∑–∞': –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ–º
    '–°–ª—É—á–∞–π–Ω–æ–µ –ò–º—è': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –¥–ª—è –ù–ü–° (–†–µ–∂–∏–º –î–ú-–∞)
    '–°–ª—É—á–∞–π–Ω—ã–π –ì–æ—Ä–æ–¥': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ (–†–µ–∂–∏–º –î–ú-–∞)
    """
    if message.chat.type == 'private':
        if message.text == '‚ôÇ Dungeon Master ‚ôÇ':  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –î–ú-–∞
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.send_message(message.chat.id, "–°—Ä–∞–∑—É –≤–∏–¥–Ω–æ - —á–µ–ª–æ–≤–µ–∫ —Å–µ—Ä—å–µ–∑–Ω—ã–π.", reply_markup=markup)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–î–∞–π—Å—ã –∫–∏–Ω—å!")
            item2 = types.KeyboardButton("–°–ª—É—á–∞–π–Ω–æ–µ –ò–º—è")
            item3 = types.KeyboardButton("–°–ª—É—á–∞–π–Ω—ã–π –ì–æ—Ä–æ–¥")
            item4 = types.KeyboardButton("–î–æ–∑–∞")
            item5 = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å")
            markup.add(item1, item2, item3, item4, item5)

            bot.send_message(message.chat.id, "–ß–µ–≥–æ –∂–µ–ª–∞–µ—Ç–µ?", reply_markup=markup)

        elif message.text == '‚öî –ò–≥—Ä–æ–∫ ‚öî':  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!", reply_markup=markup)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–î–∞–π—Å—ã –∫–∏–Ω—å!")
            item2 = types.KeyboardButton("–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
            item3 = types.KeyboardButton("–î–æ–∑–∞")
            item4 = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å")
            markup.add(item1, item2, item3, item4)

            bot.send_message(message.chat.id, "–ß–µ–≥–æ –∂–µ–ª–∞–µ—Ç–µ?", reply_markup=markup)

        elif message.text == '–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å':  # –ó–∞–º–µ–Ω–∞ —Ä–æ–ª–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π':  # –†–∞–±–æ—Ç–∞ —Å –ª–∏—Å—Ç–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            markup = types.InlineKeyboardMarkup(row_width=2)
            create = types.InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data='cs.create')
            edit = types.InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç", callback_data='cs.edit')
            markup.add(create, edit)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é", reply_markup=markup)

            @bot.callback_query_handler(func=lambda call: call.data.startswith('cs.'))
            def callback_inline(call):
                """
                –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ "–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"

                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–µ–Ω—é
                """
                try:
                    if call.message:
                        if call.data == 'cs.create':
                            bot.send_message(call.message.chat.id,'–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è!')
                            global bot_status
                            create_character(message)


                        elif call.data == 'cs.edit':
                            bot.send_message(call.message.chat.id,
                                             '')
                except Exception as e:
                    print(repr(e))

        elif message.text == '–î–æ–∑–∞':  # –í—ã–≤–æ–¥ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–º–∞ (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–°–ª—É—á–∞–π–Ω–æ–µ –ò–º—è':  # –í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è –ù–ü–° (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π –ì–æ—Ä–æ–¥':  # –í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–î–∞–π—Å—ã –∫–∏–Ω—å!':  # –ë—Ä–æ—Å–æ–∫ –¥–∞–π—Å–∞
            markup = types.InlineKeyboardMarkup(row_width=3)
            d4 = types.InlineKeyboardButton("4", callback_data='d.4')
            d6 = types.InlineKeyboardButton("6", callback_data='d.6')
            d8 = types.InlineKeyboardButton("8", callback_data='d.8')
            d10 = types.InlineKeyboardButton("10", callback_data='d.10')
            d12 = types.InlineKeyboardButton("12", callback_data='d.12')
            d20 = types.InlineKeyboardButton("20", callback_data='d.20')

            markup.add(d4, d6, d8, d10, d12, d20)

            bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –≥—Ä–∞–Ω–µ–π?", reply_markup=markup)


            bot.send_message(message.chat.id,'–ú–∏–ª—Å–¥–∞—Ä—å {0.first_name}, –∏–∑–≤–æ–ª—å—Ç–µ! –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª... –°–∫–∞–∂–∏—Ç–µ –µ—â–µ —Ä–∞–∑, –ø–æ-–¥—Ä—É–≥–æ–º—É!')

@bot.callback_query_handler(func=lambda call: call.data.startswith('d.'))
def callback_inline(call):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–æ—Å–∫–∞ –¥–∞–π—Å–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥—Ä–∞–Ω–µ–π
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º —á–∏—Å–ª–æ–º –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    try:
        if call.message:
            if call.data == 'd.4':
                bot.send_message(call.message.chat.id, str(random.randint(1, 4)))
            elif call.data == 'd.6':
                bot.send_message(call.message.chat.id, str(random.randint(1, 6)))
            elif call.data == 'd.8':
                bot.send_message(call.message.chat.id, str(random.randint(1, 8)))
            elif call.data == 'd.10':
                bot.send_message(call.message.chat.id, str(random.randint(1, 10)))
            elif call.data == 'd.12':
                bot.send_message(call.message.chat.id, str(random.randint(1, 12)))
            elif call.data == 'd.20':
                bot.send_message(call.message.chat.id, str(random.randint(1, 20)))

            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í–∞—à—É —Å—É–¥—å–±—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —á–∏—Å–ª–æ:",
                                  reply_markup=None)

    except Exception as e:
        print(repr(e))


@bot.message_handler(commands=['create_character'])
def create_character(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    """
    character = []

    def step1(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 1
        """
        character.append(msg.text)
        msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å?')
        bot.register_next_step_handler(msg, step2)

    def step2(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 2
        """
        if msg.text != '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
            character.append(msg.text)
        msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ —Å–µ–π—á–∞—Å —É—Ä–æ–≤–µ–Ω—å?')
        bot.register_next_step_handler(msg, step3)

    def step3(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 3
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –°–∏–ª—ã?')
            bot.register_next_step_handler(msg, step4)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –°–∏–ª—ã?')
                bot.register_next_step_handler(msg, step4)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step2(msg)

    def step4(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 4
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –õ–æ–≤–∫–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step5)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –õ–æ–≤–∫–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step5)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step3(msg)

    def step5(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 5
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step6)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step6)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step4(msg)

    def step6(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 6
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞?')
            bot.register_next_step_handler(msg, step7)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞?')
                bot.register_next_step_handler(msg, step7)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step5(msg)

    def step7(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 7
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ú—É–¥—Ä–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step8)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ú—É–¥—Ä–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step8)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step6(msg)

    def step8(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 8
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –•–∞—Ä–∏–∑–º—ã?')
            bot.register_next_step_handler(msg, step9)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –•–∞—Ä–∏–∑–º—ã?')
                bot.register_next_step_handler(msg, step9)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step7(msg)

    def step9(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 9
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è?')
            bot.register_next_step_handler(msg, step10)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è?')
                bot.register_next_step_handler(msg, step10)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step8(msg)

    def step10(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 10
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å –±—Ä–æ–Ω–∏?')
            bot.register_next_step_handler(msg, step11)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å –±—Ä–æ–Ω–∏?')
                bot.register_next_step_handler(msg, step11)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step9(msg)

    def step11(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 11

        –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        """
        if msg.text.isdigit():
            character.append(msg.text)
            playerMode.createCharacter(character)
            bot.send_message(message.chat.id, '–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
        else:
            msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
            step10(msg)

    msg = bot.send_message(message.chat.id, '–ö–∞–∫ –∑–æ–≤—É—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?')
    bot.register_next_step_handler(msg, step1)


# –ó–∞–ø—É—Å–∫!
bot.polling(none_stop=True)
