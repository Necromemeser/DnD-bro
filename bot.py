import re
import telebot
import random
import playerMode
import memes
import config
from threading import Thread
import schedule
from time import sleep
from markups import types
import markups
import telebot
import random
import playerMode
import config
from telebot import types
from dotenv import load_dotenv

URL = 'https://ttg.club/bestiary/'


bot = telebot.TeleBot(config.TOKEN)
chat_id = 0



        
@bot.message_handler(commands=['start'])
def welcome(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É start

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    –ò —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

    –¢–∞–∫ –∂–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Ç–æ–∫, —á—Ç–æ–±—ã –∫–∞–∂–¥—É—é —Å—Ä–µ–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
    –∫—É–ª—å—Ç—É—Ä–Ω–æ –∑–Ω–∞—á–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    """

    global chat_id
    chat_id = message.chat.id

    bot.send_video(message.chat.id, 'https://tenor.com/ru/view/pepe-pepe-the-frog-wizard-gif-7939266', None, '')
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = markups.mainMarkup()

    bot.send_message(message.chat.id,
                     "–ë—É–¥—å –∫–∞–∫ –¥–æ–º–∞, {0.first_name}!\n–Ø –Ω–∏ –≤ —á–µ–º –Ω–µ –æ—Ç–∫–∞–∂—É...\n\n"
                     "–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —Å–¥–µ–ª–∞–ª–∏ –º–µ–Ω—è —Å –æ–¥–Ω–æ–π —Ü–µ–ª—å—é - –æ–±–ª–µ–≥—á–∏—Ç—å —Ç–≤–æ—é —Ñ–µ–Ω—Ç–µ–∑–∏–π–Ω—É—é –∂–∏–∑–Ω—å\n(–Ω–∞–¥–µ—é—Å—å, –º–æ–∂–Ω–æ –≤–µ–¥—å —Å—Ä–∞–∑—É –Ω–∞ —Ç—ã?)\n\n"
                     "–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å:\n\n"
                     "üé≤ <b>–†–æ–ª–ª–∏—Ç—å –¥–∞–π—Å—ã</b> (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ —ç–ª—å—Ñ–∏–π—Å–∫–æ–º, —á—Ç–æ —è –∑–Ω–∞—é);\n\n"
                     "üìù <b>–í–≤–µ—Å—Ç–∏ —É—á–µ—Ç —Å–≤–æ–∏—Ö –¥—Ä—É–≥–∏—Ö, –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∂–∏–∑–Ω–µ–π</b>;\n\n"
                     "üßë <b>–°–ø–∏—Ö–Ω—É—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ª—é–¥–µ–π –∏ –∏–º–µ–Ω–∞ –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –±–µ–∑–¥—É—à–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç</b> (—ç—Ç —è, –¥–∞ :3);\n\n"
                     "üêó <b>–ù–∞—Ö–æ–¥–∏—Ç—å –≥–∞–¥–æ–≤ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤ –∏ —Ä–∞—Å—Ü–≤–µ—Ç–æ–∫ –ø–æ —â–µ–ª—á–∫—É –ø–∞–ª—å—Ü–∞</b> (–ø—Ä–∏–∑–Ω–∞—é, –ø–∞–ª—å—Ü–µ–≤ –Ω–µ—Ç, –Ω–æ –≤—Å–µ—Ö –≥—Ä—è–∑–Ω—ã—Ö —Ç–≤–∞—Ä–µ–π –Ω–∞–π–¥—É!);\n\n"
                     "üëâüëà <b>–ü–æ–ª—É—á–∏—Ç—å –¥–æ–∑—É —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –º–µ–∂–¥—É –ø–∞—Ä—Ç–∏—è–º–∏</b>;\n\n"
                     "–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! - —Å–∫–∞–∑–∞–ª –±—ã —è, –±—ã–ª–æ –±—ã —á—Ç–æ-—Ç–æ –µ—â–µ...\n"
                     "–í –æ–±—â–µ–º, –ø–æ–º–æ–≥—É, —á–µ–º —Å–º–æ–≥—É.\n\n"
                     "<b>–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å:\n"
                     "—Ç—ã ‚ôÇ Dungeon Master ‚ôÇ –∏–ª–∏ ‚öî –ò–≥—Ä–æ–∫ ‚öî?</b>".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

    def schedule_checker():
        while True:
            schedule.run_pending()
            sleep(30)

    def itsWednesdayMyDudes():
        return bot.send_photo(message.chat.id, "https://i.redd.it/qa90feu2yoh21.png", caption="–•–æ—Ä–æ—à–µ–π —Å—Ä–µ–¥—ã, –º–æ–∏ —á—É–≤–∞–∫–∏!")

    schedule.every().wednesday.at("09:00").do(itsWednesdayMyDudes)
    Thread(target=schedule_checker).start()


@bot.message_handler(content_types=['text'])
def role_choice_handler(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    –í–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –Ω–∏—Ö:
    '‚ôÇ Dungeon Master ‚ôÇ': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –î–ú-–∞;
    '‚öî –ò–≥—Ä–æ–∫ ‚öî': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞;
    '–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å': –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Ä–µ–∂–∏–º;
    '–î–∞–π—Å—ã –∫–∏–Ω—å!': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –∏–º–∏—Ç–∏—Ä—É—è –±—Ä–æ—Å–æ–∫ –¥–∞–π—Å–∞;
    '–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π': —Ä–∞–±–æ—Ç–∞ —Å –ª–∏—Å—Ç–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–†–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞ [*–•–æ—Ç—è –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –≤–ø–∏—Ö–Ω—É—Ç—å –∏ –≤ —Ä–µ–∂–∏–º –î–ú-–∞, –Ω–µ —Ç–∞–∫ –≤–µ–¥—å —Å–ª–æ–∂–Ω–æ...*])
    '–î–æ–∑–∞': –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ–º
    '–°–ª—É—á–∞–π–Ω–æ–µ –ò–º—è': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –¥–ª—è –ù–ü–° (–†–µ–∂–∏–º –î–ú-–∞)
    '–°–ª—É—á–∞–π–Ω—ã–π –ì–æ—Ä–æ–¥': –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ (–†–µ–∂–∏–º –î–ú-–∞)
    '–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é': –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É—â–µ—Å—Ç–≤–µ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–≤–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    if message.chat.type == 'private':
        if message.text == '‚ôÇ Dungeon Master ‚ôÇ':  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –î–ú-–∞
            markup = markups.DMMarkup()
            bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–µ–π –ò–≥—Ä—ã!\n–ß–µ–≥–æ –∂–µ–ª–∞–µ—Ç–µ?", reply_markup=markup)


        elif message.text == '‚öî –ò–≥—Ä–æ–∫ ‚öî':  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∏–≥—Ä–æ–∫–∞
            markup = markups.PlayerMarkup()
            bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–µ–π –ò–≥—Ä—ã!\n–ß–µ–≥–æ –∂–µ–ª–∞–µ—Ç–µ?", reply_markup=markup)

        elif message.text == '–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å':  # –ó–∞–º–µ–Ω–∞ —Ä–æ–ª–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            markup = markups.mainMarkup()
            bot.send_message(message.chat.id, "–ù–µ—É–∂–µ–ª–∏, –ø–æ–Ω–∞–¥–æ–±–∏–ª–∏—Å—å –º–æ–∏ –º–µ–º—ã?", reply_markup=markup)

        elif message.text == '–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π':
            markup = types.InlineKeyboardMarkup(row_width=2)
            create = types.InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data='cs.create')
            view = types.InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data='cs.view')
            edit = types.InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç", callback_data='cs.edit')
            markup.add(create, view,  edit)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é", reply_markup=markup)

            @bot.callback_query_handler(func=lambda call: call.data.startswith('cs.'))
            def callback_inline(call):
                """
                –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ "–õ–∏—Å—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"

                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–µ–Ω—é
                """
                try:
                    if call.message:
                        if call.data == 'cs.create':
                            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  text="–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è!",
                                                  reply_markup=None)
                            create_character(message)

                        elif call.data == 'cs.edit':
                            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  text="‚Üì –ü–æ–¥ –≤–∞—à–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ‚Üì",
                                                  reply_markup=None)
                            ans = bot.send_message(call.message.chat.id, playerMode.getListCharacters(str(message.from_user.id)))
                            if ans.text != "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π":
                                findCharacterForEdit(message)



                        elif call.data == 'cs.view':
                            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  text="‚Üì –ü–æ–¥ –≤–∞—à–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ‚Üì",
                                                  reply_markup=None)
                            ans = bot.send_message(call.message.chat.id, playerMode.getListCharacters(str(message.from_user.id)))
                            if ans.text != "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π":
                                 findCharacterForView(message)

                except Exception as e:
                    print(repr(e))

        elif message.text == '–Ø –∑–¥–µ—Å—å –∑–∞ –º–µ–º–∞–º–∏!':  # –í—ã–≤–æ–¥ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–º–∞ (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_photo(message.chat.id, memes.getMeme(), caption="–ú–µ–º—ã? –ò—Ö –µ—Å—Ç—å —É –º–µ–Ω—è!")

        elif message.text == '–°–ª—É—á–∞–π–Ω–æ–µ –ò–º—è':  # –í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è –ù–ü–° (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π –ì–æ—Ä–æ–¥':  # –í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        elif message.text == '–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é': # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –±–µ—Å—Ç–∏—é (–ù–µ–¥–æ–¥–µ–ª–∞–Ω–æ)
            markup = types.InlineKeyboardMarkup(row_width=1)
            take1 = types.InlineKeyboardButton("–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é –ø–æ –∏–º–µ–Ω–∏", callback_data='take1')
            take2 = types.InlineKeyboardButton("FAQ", callback_data='take2')
            markup.add(take1, take2)
            bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–ª—É—á–∏—à—å —Ç–æ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å", reply_markup=markup)
            @bot.callback_query_handler(func=lambda call: call.data.startswith('take'))
            def callback_inline(call):
                """
                –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ "–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é"

                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–µ–Ω—é
                """
                try:
                    if call.message:
                        if call.data == 'take1':
                            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  text="–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–µ—Å—Ç–∏–∏!",
                                                  reply_markup=None)
                            take_bestia(message)
                        elif call.data == 'take2':
                            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  text="–ú–∏–ª—Å–¥–∞—Ä–∏ –∏ –º–∏–ª—Å–¥–∞—Ä–Ω–∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞—é—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–π –º–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏.\n"
                                                       "–¢–∞–∫ –≤–æ—Ç, —É–≤–∞–∂–∞–µ–º—ã–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤ —á–µ—Ä—Ç–æ–≥–∞—Ö –º–æ–µ–≥–æ —Å–æ–∑–Ω–∞–Ω–∏—è –Ω—É–∂–Ω—É—é —Ç–≤–∞—Ä—å -\n"
                                                       "–º–Ω–µ –Ω—É–∂–Ω–æ –µ–µ —ç–ª—å—Ñ–∏–π—Å–∫–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, hare –∏–ª–∏ bandit), —Ç–æ–≥–¥–∞ –≤—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ. –û–±–µ—â–∞—é.",
                                                  parse_mode='html', reply_markup=markup)
                except Exception as e:
                    print(repr(e))


        elif message.text == '–î–∞–π—Å—ã –∫–∏–Ω—å!':  # –ë—Ä–æ—Å–æ–∫ –¥–∞–π—Å–∞
            markup = markups.diceMarkup()

            bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –≥—Ä–∞–Ω–µ–π?", reply_markup=markup)

        # elif message.text == '–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é':
        #     bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —ç—Ç–∞ —á–∞—Å—Ç—å –µ—â–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–∞(")

        else:
            bot.send_message(message.chat.id,
                             '–ú–∏–ª—Å–¥–∞—Ä—å {0.first_name}, –∏–∑–≤–æ–ª—å—Ç–µ! –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª... –°–∫–∞–∂–∏—Ç–µ –µ—â–µ —Ä–∞–∑, –ø–æ-–¥—Ä—É–≥–æ–º—É!'.format(
                                 message.from_user, bot.get_me()))

@bot.callback_query_handler(func=lambda call: call.data.startswith('d.'))
def callback_inline(call):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–æ—Å–∫–∞ –¥–∞–π—Å–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥—Ä–∞–Ω–µ–π
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º —á–∏—Å–ª–æ–º –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    try:
        if call.message:
            if call.data == 'd.4':
                bot.send_message(call.message.chat.id, str(random.randint(1, 4)))
            elif call.data == 'd.6':
                bot.send_message(call.message.chat.id, str(random.randint(1, 6)))
            elif call.data == 'd.8':
                bot.send_message(call.message.chat.id, str(random.randint(1, 8)))
            elif call.data == 'd.10':
                bot.send_message(call.message.chat.id, str(random.randint(1, 10)))
            elif call.data == 'd.12':
                bot.send_message(call.message.chat.id, str(random.randint(1, 12)))
            elif call.data == 'd.20':
                bot.send_message(call.message.chat.id, str(random.randint(1, 20)))

            # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í–∞—à—É —Å—É–¥—å–±—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —á–∏—Å–ª–æ:",
                                  reply_markup=None)

    except Exception as e:
        print(repr(e))



@bot.message_handler(commands=['create_character'])
def create_character(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    """
    character = []
    character.append(str(message.from_user.id))
    

    def step1(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 1
        """
        character.append(msg.text)
        msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å?')
        bot.register_next_step_handler(msg, step2)



    def step2(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 2
        """
        if msg.text != '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
            character.append(msg.text)
        msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ —Å–µ–π—á–∞—Å —É—Ä–æ–≤–µ–Ω—å?')
        bot.register_next_step_handler(msg, step3)

    def step3(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 3
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –°–∏–ª—ã?')
            bot.register_next_step_handler(msg, step4)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –°–∏–ª—ã?')
                bot.register_next_step_handler(msg, step4)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step2(msg)

    def step4(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 4
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –õ–æ–≤–∫–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step5)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –õ–æ–≤–∫–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step5)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step3(msg)

    def step5(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 5
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step6)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step6)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step4(msg)

    def step6(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 6
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞?')
            bot.register_next_step_handler(msg, step7)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞?')
                bot.register_next_step_handler(msg, step7)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step5(msg)

    def step7(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 7
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ú—É–¥—Ä–æ—Å—Ç–∏?')
            bot.register_next_step_handler(msg, step8)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ú—É–¥—Ä–æ—Å—Ç–∏?')
                bot.register_next_step_handler(msg, step8)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step6(msg)

    def step8(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 8
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –•–∞—Ä–∏–∑–º—ã?')
            bot.register_next_step_handler(msg, step9)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –•–∞—Ä–∏–∑–º—ã?')
                bot.register_next_step_handler(msg, step9)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step7(msg)

    def step9(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 9
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è?')
            bot.register_next_step_handler(msg, step10)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è?')
                bot.register_next_step_handler(msg, step10)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step8(msg)

    def step10(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 10
        """
        if msg.text.isdigit():
            character.append(msg.text)
            msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å –±—Ä–æ–Ω–∏?')
            bot.register_next_step_handler(msg, step11)
        else:
            if msg.text == '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!':
                msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –Ω–µ–≥–æ –∫–ª–∞—Å—Å –±—Ä–æ–Ω–∏?')
                bot.register_next_step_handler(msg, step11)
            else:
                msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
                step9(msg)

    def step11(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —à–∞–≥ 11

        –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        """
        if msg.text.isdigit():
            character.append(msg.text)
            playerMode.createCharacter(character)
            bot.send_message(message.chat.id, '–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
        else:
            msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
            step10(msg)

    msg = bot.send_message(message.chat.id, '–ö–∞–∫ –∑–æ–≤—É—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?')
    bot.register_next_step_handler(msg, step1)

@bot.message_handler(commands=['find_character'])
def findCharacterForView(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    """
    def getName(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
        """
        info = playerMode.getIinfoAboutCharacter(str(message.from_user.id), msg.text)
        bot.send_message(message.chat.id, info.format(message.from_user, bot.get_me()), parse_mode='html')

    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ç–æ—Ä–æ–º –≤–∞–º –Ω—É–∂–Ω—ã')
    bot.register_next_step_handler(msg, getName)

@bot.message_handler(commands=['find_character_for_edit'])
def findCharacterForEdit(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    """

    def getName(msg):
        """
        –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
        """

        characterName = msg.text
        info = playerMode.getIinfoAboutCharacter(str(message.from_user.id), msg.text)

        if info != "–£ –≤–∞—Å –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º":
            info = "–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n\n" + info
            bot.send_message(message.chat.id, info.format(message.from_user, bot.get_me()), parse_mode='html')

            name = types.InlineKeyboardButton("–ò–º—è", callback_data='ce.name.'+characterName)
            cl = types.InlineKeyboardButton("–ö–ª–∞—Å—Å", callback_data='ce.class.'+characterName)
            lvl = types.InlineKeyboardButton("–£—Ä–æ–≤–µ–Ω—å", callback_data='ce.level.'+characterName)

            s = types.InlineKeyboardButton("–°–ò–õ", callback_data='ce.strength.'+characterName)
            dex = types.InlineKeyboardButton("–õ–û–í", callback_data='ce.dexterity.'+characterName)
            sta = types.InlineKeyboardButton("–í–´–ù", callback_data='ce.stamina.'+characterName)
            intellect = types.InlineKeyboardButton("–ò–ù–¢", callback_data='ce.intellect.'+characterName)
            w = types.InlineKeyboardButton("–ú–£–î", callback_data='ce.wisdom.'+characterName)
            ch = types.InlineKeyboardButton("–•–ê–†", callback_data='ce.charisma.'+characterName)

            hp = types.InlineKeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –•–ü", callback_data='ce.hp.'+characterName)
            armor = types.InlineKeyboardButton("–ö–ª–∞—Å—Å –±—Ä–æ–Ω–∏", callback_data='ce.armor_class.'+characterName)

            inventory = types.InlineKeyboardButton("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", callback_data='ce.inventory.'+characterName)

            markup = types.InlineKeyboardMarkup([[name, cl, lvl],
                                                 [s, dex, sta, intellect, w, ch],
                                                 [hp, armor],
                                                 [inventory]])
            bot.send_message(message.chat.id, "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=markup)

            @bot.callback_query_handler(func=lambda call: call.data.startswith('ce.'))
            def callback_inline(call):
                """
                –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤—ã

                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç–∞—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
                """

                call.data = call.data[3:]
                callData = re.search(r'(.*?)(\.)(.*)', call.data)

                parametr = callData[1]
                characterName = callData[3]

                print("In c_i: ", characterName, call.data, parametr)
                @bot.message_handler(commands=['set_val'])
                def setVal(message):
                    """
                    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    """
                    print("–í setVal: ", characterName, parametr)
                    if parametr != "name" and parametr != "class" and parametr != "inventory":
                        if not message.text.isdigit():
                            bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã.")
                        else:
                            res = playerMode.changeInfoAboutCharacter(str(message.from_user.id), characterName,
                                                                      parametr, message.text)
                            bot.send_message(message.chat.id, res)
                    else:
                        res = playerMode.changeInfoAboutCharacter(str(message.from_user.id), characterName, parametr,
                                                                  message.text)
                        bot.send_message(message.chat.id, res)

                try:
                    if call.message:
                        # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              text="‚Üì –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üì",
                                              reply_markup=None)
                        bot.register_next_step_handler(msg, setVal)

                except Exception as e:
                    print(repr(e))
        else:
            bot.send_message(message.chat.id, info)

    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å')
    bot.register_next_step_handler(msg, getName)


def form_url(message):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
        """
        name = message.text
        url= URL + name
        message = bot.send_message(message.chat.id, f'–õ–æ–≤–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ö–æ–º—è—á–æ–∫: {url}')

@bot.message_handler(commands=['–ù–∞–π—Ç–∏ –±–µ—Å—Ç–∏—é'])
def take_bestia(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–µ—Å—Ç–∏–∏
    """

    msg = bot.send_message(message.chat.id, '–ö–∞–∫—É—é –±–µ—Å—Ç–∏—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?')
    bot.register_next_step_handler(msg, form_url)

# –ó–∞–ø—É—Å–∫!
bot.polling(none_stop=True)


